# %%--- [markdown]
# properties:
#   locked: true
# ---%%
# Starboard-Beispielnotebook

Dieses Notebook lÃ¤uft direkt im Browser und braucht keine serverseitige Installation.
# %% [markdown]
Die folgenden Beispiele verwenden [Chart.js](https://www.chartjs.org/). TatsÃ¤chlich kann jede JavaScript Graph Library eingebunden werden. Auch Python-Graphen sind mÃ¶glich.
# %% [markdown]
Alle Beispiele verwenden den gleichen Datensatz. Der kann hier geÃ¤ndert werden, nach erneutem â€œPlayâ€ der Beispiele Ã¼bernehmen sie die Ã„nderungen. Hier die Daten:
# %%--- [javascript]
# properties:
#   run_on_load: true
# ---%%
var my_data = [48,24,57,24,78,12,56] ;

var backgrounds =  [
      'rgb(255, 99, 132)',
      'rgb(75, 192, 192)',
      'rgb(255, 205, 86)',
      'rgb(201, 203, 207)',
      'rgb(75, 192, 192)',
      'rgb(255, 205, 86)',
      'rgb(54, 162, 235)'
    ] ;
# %% [markdown]
Die mÃ¶gliche Fehlermeldung â€œ*No shared array buffer/atomics support detected, and global service worker workaround can't be injected*â€œ kann vorerst ignoriert werden. Sie entsteht, weil das Starboard-Script von einer anderen Domain geladen wird. Es gibt auch die MÃ¶glichkeit, die Starboard-Skripte selbst zu hosten, dann gibt es keinen Fehler mehr.
# %% [markdown]
Diese Zelle lÃ¤dt die Graph Library:
# %%--- [javascript]
# properties:
#   run_on_load: true
# ---%%
await import("https://unpkg.com/chart.js@2.9.3/dist/Chart.bundle.min.js");
# %% [markdown]
Das erste Beispiel stellt die Daten als Bar Chart dar. Auf das Augen-Symbol unter dieser Zelle klicken, um das Skript einzublenden.
# %%--- [javascript]
# properties:
#   run_on_load: true
#   top_hidden: true
# ---%%
const canvas = document.createElement("canvas");

new Chart(canvas.getContext("2d"), {
  type: "bar",
  data: {
    labels: my_data,
    datasets: [{
      label: "Example Data",
      data: my_data,
    backgroundColor: backgrounds
    }]
  },
  options: {}
  }
);

canvas
# %% [markdown]
Die selben Daten als Doughnut:
# %%--- [javascript]
# properties:
#   run_on_load: true
#   top_hidden: true
# ---%%
const canvas = document.createElement("canvas");

new Chart(canvas.getContext("2d"), {
  type: "doughnut",
  data: {
    labels: my_data,
    datasets: [{
      label: "Example Data",
      data: my_data,
    backgroundColor: backgrounds
    }]
  },
  options: {}
  }
);

canvas
# %% [markdown]
Und als Line Chart:
# %%--- [javascript]
# properties:
#   run_on_load: true
#   top_hidden: true
# ---%%
const canvas = document.createElement("canvas");

new Chart(canvas.getContext("2d"), {
  type: "line",
  data: {
    labels: my_data,
    datasets: [{
      label: "Example Data",
      data: my_data,
    backgroundColor: backgrounds,
      fill: false,
      borderColor: "rgb(34,156,134)"
    }]
  },
  options: {}
  }
);

canvas
# %% [markdown]
Und schlieÃŸlich ein Radar Chart:
# %%--- [javascript]
# properties:
#   run_on_load: true
#   top_hidden: true
# ---%%
const canvas = document.createElement("canvas");

new Chart(canvas.getContext("2d"), {
  type: "radar",
  data: {
    labels: my_data,
    datasets: [{
      label: "Example Data",
      data: my_data,
    backgroundColor: "rgba(156,23,45,0.2)",
      fill: true,
      borderColor: "rgb(34,156,134)"
    }]
  },
  options: {}
  }
);

canvas
# %% [markdown]
Und damit ist die Demo-Seite zuende. Der Quellcode ist hier: [./index.sb](./index.sb)